@page "/admin/purchases"

@inherits OwningComponentBase<IPurchaseRepository>



<PurchaseTable TableTitle="Uncollected Purchases" Donations="UncollectedPurchases"
               ButtonLabel="Collected" PurchaseSelected="CollectPurchase"></PurchaseTable>

<PurchaseTable TableTitle="Collected Donations" Donations="CollectedDonations"
               ButtonLabel="Reset" PurchaseSelected="ResetPurchase"></PurchaseTable>

<button class="btn btn-info" @onclick="@(x=> UpdateData())">Refresh Data</button>

@code{
    public IPurchaseRepository repo => Service;


    public IEnumerable<Purchase> AllPurchases { get; set; }
    public IEnumerable<Purchase> UncollectedPurchases { get; set; }
    public IEnumerable<Purchase> CollectedPurchases { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }
    public async Task UpdateData()
    {
        AllPurchases = await repo.Purchases.ToListAsync();
        UncollectedPurchases = AllPurchases.Where(x => !x.PurchaseReceived);
        CollectedPurchases = AllPurchases.Where(x => x.PurchaseReceived);
    }

    public void CollectPurchase(int id) => UpdatePurchase(id, true);
    public void ResetPurchase(int id) => UpdatePurchase(id, true);
    private void UpdatePurchase(int id, bool donated)
    {
        Purchase d = repo.Purchases.FirstOrDefault(x => x.DonationId == id);
        d.PurchaseReceived = donated;
        repo.SavePurchase(d);
    }
}
